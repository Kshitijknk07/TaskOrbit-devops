version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: taskorbit-db
    environment:
      POSTGRES_DB: taskorbit
      POSTGRES_USER: taskorbit
      POSTGRES_PASSWORD: taskorbit123
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - taskorbit-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskorbit -d taskorbit"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskorbit-backend
    environment:
      NODE_ENV: development
      PORT: 8080
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: taskorbit
      DB_USER: taskorbit
      DB_PASSWORD: taskorbit123
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:3001
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - taskorbit-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: taskorbit-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - taskorbit-network
    restart: unless-stopped

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:10.2.2
    container_name: taskorbit-grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    ports:
      - "3002:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - taskorbit-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  taskorbit-network:
    driver: bridge 